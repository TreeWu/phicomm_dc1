pipeline {
    agent any
    environment {
        COMPOSE_NAME = 'dc1'
        COMPOSE_PATH = '/data/dc1/docker-compose.yaml'
    }
    stages {
        stage('Build Base Images') {
            steps {
                dir('kratos-server') {
                    sh "docker build -t dc1base:latest -f dc1base.Dockerfile ."
                }
            }
        }
        stage('Build Dc1server Images') {
            steps {
                dir('kratos-server') {
                    sh "docker build -t dc1server:latest -f dc1server.Dockerfile ."
                }
            }
        }
        stage('Build gateway Images') {
            steps {
                dir('kratos-server') {
                    sh "docker build -t gateway:latest -f gateway.Dockerfile ."
                }
            }
        }
        stage('Update Compose') {
            steps {
                script {
                    def timestamp = sh(script: 'date +%s', returnStdout: true).trim()
                    def token = sh(script: "echo -n 1panel${env.1PANEL_TOKEN}${timestamp} | md5sum | awk '{print \$1}'", returnStdout: true).trim()
                    
                    sh """
                    curl --location --request POST "${env.1PANEL_URL}/api/v1/containers/compose/operate" \
                    --header "1Panel-Token: ${token}" \
                    --header "1Panel-Timestamp: ${timestamp}" \
                    --header "Content-Type: application/json" \
                    --data-raw '{"name":"${env.COMPOSE_NAME}","path":"${env.COMPOSE_PATH}","operation":"up","withFile":false}'
                    """
                }
            }
        }
    }

    post {
        success {
            echo "✅ 构建成功"
        }
        failure {
            echo "❌ 构建失败"
        }
    }
}