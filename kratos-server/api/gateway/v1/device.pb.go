// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: api/gateway/v1/device.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 设备连接
type DeviceConnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac  string `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *DeviceConnectReq) Reset() {
	*x = DeviceConnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_device_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceConnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConnectReq) ProtoMessage() {}

func (x *DeviceConnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_device_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceConnectReq.ProtoReflect.Descriptor instead.
func (*DeviceConnectReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_device_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceConnectReq) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *DeviceConnectReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// 设备连接回复
type DeviceConnectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *DeviceConnectReply) Reset() {
	*x = DeviceConnectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_device_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceConnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConnectReply) ProtoMessage() {}

func (x *DeviceConnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_device_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceConnectReply.ProtoReflect.Descriptor instead.
func (*DeviceConnectReply) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_device_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceConnectReply) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// 设备信息
type Dc1Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                     // 唯一标识
	DeviceId        string      `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                          // 设备id
	UserId          string      `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                // 用户id
	Name            string      `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                                  // 设备名称
	DeviceType      string      `protobuf:"bytes,5,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`                    // 设备类型
	IsOnline        bool        `protobuf:"varint,6,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`                         // 是否在线
	I               int32       `protobuf:"varint,7,opt,name=i,proto3" json:"i,omitempty"`                                                       // 电流
	V               int32       `protobuf:"varint,8,opt,name=v,proto3" json:"v,omitempty"`                                                       // 电压
	P               int32       `protobuf:"varint,9,opt,name=p,proto3" json:"p,omitempty"`                                                       // 功率
	DetalKwh        int32       `protobuf:"varint,10,opt,name=detal_kwh,json=detalKwh,proto3" json:"detal_kwh,omitempty"`                        // 电量
	Recover         bool        `protobuf:"varint,11,opt,name=recover,proto3" json:"recover,omitempty"`                                          // 是否断电恢复
	Switch1Name     string      `protobuf:"bytes,12,opt,name=switch1_name,json=switch1Name,proto3" json:"switch1_name,omitempty"`                // 开关1名称
	Switch2Name     string      `protobuf:"bytes,13,opt,name=switch2_name,json=switch2Name,proto3" json:"switch2_name,omitempty"`                // 开关2名称
	Switch3Name     string      `protobuf:"bytes,14,opt,name=switch3_name,json=switch3Name,proto3" json:"switch3_name,omitempty"`                // 开关3名称
	LastActivatedAt int64       `protobuf:"varint,15,opt,name=last_activated_at,json=lastActivatedAt,proto3" json:"last_activated_at,omitempty"` // 最后激活时间
	LastMessageAt   int64       `protobuf:"varint,16,opt,name=last_message_at,json=lastMessageAt,proto3" json:"last_message_at,omitempty"`       // 最后消息时间
	Command         *Dc1Command `protobuf:"bytes,17,opt,name=command,proto3" json:"command,omitempty"`                                           // 命令
}

func (x *Dc1Device) Reset() {
	*x = Dc1Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_device_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dc1Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dc1Device) ProtoMessage() {}

func (x *Dc1Device) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_device_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dc1Device.ProtoReflect.Descriptor instead.
func (*Dc1Device) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_device_proto_rawDescGZIP(), []int{2}
}

func (x *Dc1Device) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Dc1Device) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Dc1Device) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Dc1Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dc1Device) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *Dc1Device) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *Dc1Device) GetI() int32 {
	if x != nil {
		return x.I
	}
	return 0
}

func (x *Dc1Device) GetV() int32 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *Dc1Device) GetP() int32 {
	if x != nil {
		return x.P
	}
	return 0
}

func (x *Dc1Device) GetDetalKwh() int32 {
	if x != nil {
		return x.DetalKwh
	}
	return 0
}

func (x *Dc1Device) GetRecover() bool {
	if x != nil {
		return x.Recover
	}
	return false
}

func (x *Dc1Device) GetSwitch1Name() string {
	if x != nil {
		return x.Switch1Name
	}
	return ""
}

func (x *Dc1Device) GetSwitch2Name() string {
	if x != nil {
		return x.Switch2Name
	}
	return ""
}

func (x *Dc1Device) GetSwitch3Name() string {
	if x != nil {
		return x.Switch3Name
	}
	return ""
}

func (x *Dc1Device) GetLastActivatedAt() int64 {
	if x != nil {
		return x.LastActivatedAt
	}
	return 0
}

func (x *Dc1Device) GetLastMessageAt() int64 {
	if x != nil {
		return x.LastMessageAt
	}
	return 0
}

func (x *Dc1Device) GetCommand() *Dc1Command {
	if x != nil {
		return x.Command
	}
	return nil
}

// 更新设备信息
type UpdateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId    *string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`           // 设备id
	Name        *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`                                   // 设备名称
	Switch1Name *string `protobuf:"bytes,12,opt,name=switch1_name,json=switch1Name,proto3,oneof" json:"switch1_name,omitempty"` // 开关1名称
	Switch2Name *string `protobuf:"bytes,13,opt,name=switch2_name,json=switch2Name,proto3,oneof" json:"switch2_name,omitempty"` // 开关2名称
	Switch3Name *string `protobuf:"bytes,14,opt,name=switch3_name,json=switch3Name,proto3,oneof" json:"switch3_name,omitempty"` // 开关3名称
	Recover     *bool   `protobuf:"varint,11,opt,name=recover,proto3,oneof" json:"recover,omitempty"`                           // 是否断电恢复
}

func (x *UpdateDeviceRequest) Reset() {
	*x = UpdateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_device_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceRequest) ProtoMessage() {}

func (x *UpdateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_device_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_device_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDeviceRequest) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *UpdateDeviceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateDeviceRequest) GetSwitch1Name() string {
	if x != nil && x.Switch1Name != nil {
		return *x.Switch1Name
	}
	return ""
}

func (x *UpdateDeviceRequest) GetSwitch2Name() string {
	if x != nil && x.Switch2Name != nil {
		return *x.Switch2Name
	}
	return ""
}

func (x *UpdateDeviceRequest) GetSwitch3Name() string {
	if x != nil && x.Switch3Name != nil {
		return *x.Switch3Name
	}
	return ""
}

func (x *UpdateDeviceRequest) GetRecover() bool {
	if x != nil && x.Recover != nil {
		return *x.Recover
	}
	return false
}

// 更新设备回复
type UpdateDeviceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDeviceReply) Reset() {
	*x = UpdateDeviceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_device_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceReply) ProtoMessage() {}

func (x *UpdateDeviceReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_device_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceReply.ProtoReflect.Descriptor instead.
func (*UpdateDeviceReply) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_device_proto_rawDescGZIP(), []int{4}
}

// 获取设备列表
type ListDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
}

func (x *ListDeviceRequest) Reset() {
	*x = ListDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_device_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceRequest) ProtoMessage() {}

func (x *ListDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_device_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceRequest.ProtoReflect.Descriptor instead.
func (*ListDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_device_proto_rawDescGZIP(), []int{5}
}

func (x *ListDeviceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 获取设备列表回复
type ListDeviceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*Dc1Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"` // 设备列表
}

func (x *ListDeviceReply) Reset() {
	*x = ListDeviceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_device_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceReply) ProtoMessage() {}

func (x *ListDeviceReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_device_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceReply.ProtoReflect.Descriptor instead.
func (*ListDeviceReply) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_device_proto_rawDescGZIP(), []int{6}
}

func (x *ListDeviceReply) GetDevices() []*Dc1Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

var File_api_gateway_v1_device_proto protoreflect.FileDescriptor

var file_api_gateway_v1_device_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x38, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x12,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22,
	0xf7, 0x03, 0x0a, 0x09, 0x44, 0x63, 0x31, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x69, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x76, 0x12, 0x0c, 0x0a, 0x01, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x6b, 0x77, 0x68, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x74, 0x61, 0x6c, 0x4b, 0x77, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x31, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x31, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x32, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x32, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x33, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x63, 0x31, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xc6, 0x02, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x05, 0x48, 0x00, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x31,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x73,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x31, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x32, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x32, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x33,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0b, 0x73,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x33, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x31, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x32,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x33, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x63, 0x31, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x32, 0xcf, 0x02,
	0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c,
	0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x0a,
	0x42, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x43, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x72, 0x65, 0x65, 0x77, 0x75, 0x2f, 0x70, 0x68, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x5f, 0x64,
	0x63, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_gateway_v1_device_proto_rawDescOnce sync.Once
	file_api_gateway_v1_device_proto_rawDescData = file_api_gateway_v1_device_proto_rawDesc
)

func file_api_gateway_v1_device_proto_rawDescGZIP() []byte {
	file_api_gateway_v1_device_proto_rawDescOnce.Do(func() {
		file_api_gateway_v1_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_gateway_v1_device_proto_rawDescData)
	})
	return file_api_gateway_v1_device_proto_rawDescData
}

var file_api_gateway_v1_device_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_gateway_v1_device_proto_goTypes = []interface{}{
	(*DeviceConnectReq)(nil),    // 0: api.gateway.v1.DeviceConnectReq
	(*DeviceConnectReply)(nil),  // 1: api.gateway.v1.DeviceConnectReply
	(*Dc1Device)(nil),           // 2: api.gateway.v1.Dc1Device
	(*UpdateDeviceRequest)(nil), // 3: api.gateway.v1.UpdateDeviceRequest
	(*UpdateDeviceReply)(nil),   // 4: api.gateway.v1.UpdateDeviceReply
	(*ListDeviceRequest)(nil),   // 5: api.gateway.v1.ListDeviceRequest
	(*ListDeviceReply)(nil),     // 6: api.gateway.v1.ListDeviceReply
	(*Dc1Command)(nil),          // 7: api.gateway.v1.Dc1Command
}
var file_api_gateway_v1_device_proto_depIdxs = []int32{
	7, // 0: api.gateway.v1.Dc1Device.command:type_name -> api.gateway.v1.Dc1Command
	2, // 1: api.gateway.v1.ListDeviceReply.devices:type_name -> api.gateway.v1.Dc1Device
	3, // 2: api.gateway.v1.Device.UpdateDevice:input_type -> api.gateway.v1.UpdateDeviceRequest
	5, // 3: api.gateway.v1.Device.ListDevice:input_type -> api.gateway.v1.ListDeviceRequest
	0, // 4: api.gateway.v1.Device.BindDevice:input_type -> api.gateway.v1.DeviceConnectReq
	4, // 5: api.gateway.v1.Device.UpdateDevice:output_type -> api.gateway.v1.UpdateDeviceReply
	6, // 6: api.gateway.v1.Device.ListDevice:output_type -> api.gateway.v1.ListDeviceReply
	1, // 7: api.gateway.v1.Device.BindDevice:output_type -> api.gateway.v1.DeviceConnectReply
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_gateway_v1_device_proto_init() }
func file_api_gateway_v1_device_proto_init() {
	if File_api_gateway_v1_device_proto != nil {
		return
	}
	file_api_gateway_v1_command_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_gateway_v1_device_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceConnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_device_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceConnectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_device_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dc1Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_device_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_device_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_device_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_device_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_gateway_v1_device_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_gateway_v1_device_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_gateway_v1_device_proto_goTypes,
		DependencyIndexes: file_api_gateway_v1_device_proto_depIdxs,
		MessageInfos:      file_api_gateway_v1_device_proto_msgTypes,
	}.Build()
	File_api_gateway_v1_device_proto = out.File
	file_api_gateway_v1_device_proto_rawDesc = nil
	file_api_gateway_v1_device_proto_goTypes = nil
	file_api_gateway_v1_device_proto_depIdxs = nil
}
