// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: api/gateway/v1/plan.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlanType int32

const (
	PlanType_PLAN_TYPE_NONE   PlanType = 0 // 无用
	PlanType_PLAN_TYPE_AUTO   PlanType = 1 // 自动执行
	PlanType_PLAN_TYPE_MANUAL PlanType = 2 // 手动执行
)

// Enum value maps for PlanType.
var (
	PlanType_name = map[int32]string{
		0: "PLAN_TYPE_NONE",
		1: "PLAN_TYPE_AUTO",
		2: "PLAN_TYPE_MANUAL",
	}
	PlanType_value = map[string]int32{
		"PLAN_TYPE_NONE":   0,
		"PLAN_TYPE_AUTO":   1,
		"PLAN_TYPE_MANUAL": 2,
	}
)

func (x PlanType) Enum() *PlanType {
	p := new(PlanType)
	*p = x
	return p
}

func (x PlanType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlanType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_gateway_v1_plan_proto_enumTypes[0].Descriptor()
}

func (PlanType) Type() protoreflect.EnumType {
	return &file_api_gateway_v1_plan_proto_enumTypes[0]
}

func (x PlanType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlanType.Descriptor instead.
func (PlanType) EnumDescriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{0}
}

// 创建计划
type CreatePlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *PlanModel `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"` // 计划模型
}

func (x *CreatePlanRequest) Reset() {
	*x = CreatePlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlanRequest) ProtoMessage() {}

func (x *CreatePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlanRequest.ProtoReflect.Descriptor instead.
func (*CreatePlanRequest) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePlanRequest) GetPlan() *PlanModel {
	if x != nil {
		return x.Plan
	}
	return nil
}

// 计划模型
type PlanModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                          // 唯一标识
	Name         string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                       // 名称
	PlanType     PlanType          `protobuf:"varint,3,opt,name=plan_type,json=planType,proto3,enum=api.gateway.v1.PlanType" json:"plan_type,omitempty"` // 执行类型
	Cron         string            `protobuf:"bytes,4,opt,name=cron,proto3" json:"cron,omitempty"`                                                       // cron表达式
	Enabled      bool              `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`                                                // 是否启用
	Devices      []*PlanDevice     `protobuf:"bytes,6,rep,name=devices,proto3" json:"devices,omitempty"`                                                 // 设备列表
	NextExecTime string            `protobuf:"bytes,8,opt,name=next_exec_time,json=nextExecTime,proto3" json:"next_exec_time,omitempty"`                 // 下次执行时间
	History      []*CommandHistory `protobuf:"bytes,9,rep,name=history,proto3" json:"history,omitempty"`
}

func (x *PlanModel) Reset() {
	*x = PlanModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanModel) ProtoMessage() {}

func (x *PlanModel) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanModel.ProtoReflect.Descriptor instead.
func (*PlanModel) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{1}
}

func (x *PlanModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlanModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlanModel) GetPlanType() PlanType {
	if x != nil {
		return x.PlanType
	}
	return PlanType_PLAN_TYPE_NONE
}

func (x *PlanModel) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *PlanModel) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *PlanModel) GetDevices() []*PlanDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *PlanModel) GetNextExecTime() string {
	if x != nil {
		return x.NextExecTime
	}
	return ""
}

func (x *PlanModel) GetHistory() []*CommandHistory {
	if x != nil {
		return x.History
	}
	return nil
}

type CommandHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandId  string `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	ExecTime   string `protobuf:"bytes,2,opt,name=exec_time,json=execTime,proto3" json:"exec_time,omitempty"`
	ExecResult string `protobuf:"bytes,3,opt,name=exec_result,json=execResult,proto3" json:"exec_result,omitempty"`
}

func (x *CommandHistory) Reset() {
	*x = CommandHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandHistory) ProtoMessage() {}

func (x *CommandHistory) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandHistory.ProtoReflect.Descriptor instead.
func (*CommandHistory) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{2}
}

func (x *CommandHistory) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *CommandHistory) GetExecTime() string {
	if x != nil {
		return x.ExecTime
	}
	return ""
}

func (x *CommandHistory) GetExecResult() string {
	if x != nil {
		return x.ExecResult
	}
	return ""
}

// 计划模型设备开关配置
type PlanDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId   string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`              // 设备ID
	Switch1    *int32 `protobuf:"varint,2,opt,name=switch1,proto3,oneof" json:"switch1,omitempty"`                         // 开关1
	Switch2    *int32 `protobuf:"varint,3,opt,name=switch2,proto3,oneof" json:"switch2,omitempty"`                         // 开关2
	Switch3    *int32 `protobuf:"varint,4,opt,name=switch3,proto3,oneof" json:"switch3,omitempty"`                         // 开关3
	SwitchMain *int32 `protobuf:"varint,5,opt,name=switch_main,json=switchMain,proto3,oneof" json:"switch_main,omitempty"` // 主开关
}

func (x *PlanDevice) Reset() {
	*x = PlanDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanDevice) ProtoMessage() {}

func (x *PlanDevice) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanDevice.ProtoReflect.Descriptor instead.
func (*PlanDevice) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{3}
}

func (x *PlanDevice) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PlanDevice) GetSwitch1() int32 {
	if x != nil && x.Switch1 != nil {
		return *x.Switch1
	}
	return 0
}

func (x *PlanDevice) GetSwitch2() int32 {
	if x != nil && x.Switch2 != nil {
		return *x.Switch2
	}
	return 0
}

func (x *PlanDevice) GetSwitch3() int32 {
	if x != nil && x.Switch3 != nil {
		return *x.Switch3
	}
	return 0
}

func (x *PlanDevice) GetSwitchMain() int32 {
	if x != nil && x.SwitchMain != nil {
		return *x.SwitchMain
	}
	return 0
}

// 创建计划恢复
type CreatePlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 计划ID
}

func (x *CreatePlanReply) Reset() {
	*x = CreatePlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlanReply) ProtoMessage() {}

func (x *CreatePlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlanReply.ProtoReflect.Descriptor instead.
func (*CreatePlanReply) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePlanReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 更新计划
type UpdatePlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *PlanModel `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"` // 计划模型
}

func (x *UpdatePlanRequest) Reset() {
	*x = UpdatePlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlanRequest) ProtoMessage() {}

func (x *UpdatePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlanRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlanRequest) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePlanRequest) GetPlan() *PlanModel {
	if x != nil {
		return x.Plan
	}
	return nil
}

// 更新计划回复
type UpdatePlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 计划ID
}

func (x *UpdatePlanReply) Reset() {
	*x = UpdatePlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlanReply) ProtoMessage() {}

func (x *UpdatePlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlanReply.ProtoReflect.Descriptor instead.
func (*UpdatePlanReply) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePlanReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除计划
type DeletePlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 计划ID
}

func (x *DeletePlanRequest) Reset() {
	*x = DeletePlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlanRequest) ProtoMessage() {}

func (x *DeletePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlanRequest.ProtoReflect.Descriptor instead.
func (*DeletePlanRequest) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePlanRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除计划回复
type DeletePlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePlanReply) Reset() {
	*x = DeletePlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlanReply) ProtoMessage() {}

func (x *DeletePlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlanReply.ProtoReflect.Descriptor instead.
func (*DeletePlanReply) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{8}
}

// 获取计划
type GetPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPlanRequest) Reset() {
	*x = GetPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanRequest) ProtoMessage() {}

func (x *GetPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanRequest.ProtoReflect.Descriptor instead.
func (*GetPlanRequest) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{9}
}

func (x *GetPlanRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取计划回复
type GetPlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *PlanModel `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"` // 计划模型
}

func (x *GetPlanReply) Reset() {
	*x = GetPlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanReply) ProtoMessage() {}

func (x *GetPlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanReply.ProtoReflect.Descriptor instead.
func (*GetPlanReply) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{10}
}

func (x *GetPlanReply) GetPlan() *PlanModel {
	if x != nil {
		return x.Plan
	}
	return nil
}

// 获取计划列表
type ListPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPlanRequest) Reset() {
	*x = ListPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanRequest) ProtoMessage() {}

func (x *ListPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanRequest.ProtoReflect.Descriptor instead.
func (*ListPlanRequest) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{11}
}

// 获取计划列表回复
type ListPlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*PlanModel `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"` // 计划列表
}

func (x *ListPlanReply) Reset() {
	*x = ListPlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanReply) ProtoMessage() {}

func (x *ListPlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanReply.ProtoReflect.Descriptor instead.
func (*ListPlanReply) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{12}
}

func (x *ListPlanReply) GetPlans() []*PlanModel {
	if x != nil {
		return x.Plans
	}
	return nil
}

// 切换计划开关
type SwitchPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // 计划ID
	Enable bool  `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"` // 开关
}

func (x *SwitchPlanRequest) Reset() {
	*x = SwitchPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchPlanRequest) ProtoMessage() {}

func (x *SwitchPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchPlanRequest.ProtoReflect.Descriptor instead.
func (*SwitchPlanRequest) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{13}
}

func (x *SwitchPlanRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SwitchPlanRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

// 切换计划开关回复
type SwitchPlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *PlanModel `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"` // 计划模型
}

func (x *SwitchPlanReply) Reset() {
	*x = SwitchPlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchPlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchPlanReply) ProtoMessage() {}

func (x *SwitchPlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchPlanReply.ProtoReflect.Descriptor instead.
func (*SwitchPlanReply) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{14}
}

func (x *SwitchPlanReply) GetPlan() *PlanModel {
	if x != nil {
		return x.Plan
	}
	return nil
}

// 执行计划
type ExecPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 计划ID
}

func (x *ExecPlanRequest) Reset() {
	*x = ExecPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecPlanRequest) ProtoMessage() {}

func (x *ExecPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecPlanRequest.ProtoReflect.Descriptor instead.
func (*ExecPlanRequest) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{15}
}

func (x *ExecPlanRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 执行计划回复
type ExecPlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ExecPlanReply) Reset() {
	*x = ExecPlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_plan_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecPlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecPlanReply) ProtoMessage() {}

func (x *ExecPlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_plan_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecPlanReply.ProtoReflect.Descriptor instead.
func (*ExecPlanReply) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_plan_proto_rawDescGZIP(), []int{16}
}

func (x *ExecPlanReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_gateway_v1_plan_proto protoreflect.FileDescriptor

var file_api_gateway_v1_plan_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x42, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0xb5, 0x02, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x14, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x6d,
	0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x65, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8c, 0x02,
	0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a,
	0x04, 0x30, 0x00, 0x30, 0x01, 0x48, 0x00, 0x52, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x31,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x30, 0x00, 0x30, 0x01, 0x48,
	0x01, 0x52, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x32, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x1a, 0x04, 0x30, 0x00, 0x30, 0x01, 0x48, 0x02, 0x52, 0x07, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x33, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x0b, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x1a, 0x04, 0x30, 0x00, 0x30, 0x01, 0x48, 0x03, 0x52, 0x0a, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x4d, 0x61, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x31, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x32,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x33, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x21, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x42, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x70,
	0x6c, 0x61, 0x6e, 0x22, 0x21, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x3d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2d, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22,
	0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x40, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x22, 0x3b, 0x0a, 0x11, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x40, 0x0a, 0x0f, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x70,
	0x6c, 0x61, 0x6e, 0x22, 0x21, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2a, 0x48, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x0e, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41,
	0x55, 0x54, 0x4f, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x02, 0x32, 0xe6, 0x05, 0x0a, 0x04,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x6c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01,
	0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x6c, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22,
	0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x6c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x5d,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12,
	0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x61, 0x0a,
	0x08, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x6c, 0x0a, 0x0a, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x64,
	0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2f,
	0x65, 0x78, 0x65, 0x63, 0x42, 0x43, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x77, 0x75, 0x2f, 0x70, 0x68, 0x69, 0x63,
	0x6f, 0x6d, 0x6d, 0x5f, 0x64, 0x63, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_gateway_v1_plan_proto_rawDescOnce sync.Once
	file_api_gateway_v1_plan_proto_rawDescData = file_api_gateway_v1_plan_proto_rawDesc
)

func file_api_gateway_v1_plan_proto_rawDescGZIP() []byte {
	file_api_gateway_v1_plan_proto_rawDescOnce.Do(func() {
		file_api_gateway_v1_plan_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_gateway_v1_plan_proto_rawDescData)
	})
	return file_api_gateway_v1_plan_proto_rawDescData
}

var file_api_gateway_v1_plan_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_gateway_v1_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_gateway_v1_plan_proto_goTypes = []interface{}{
	(PlanType)(0),             // 0: api.gateway.v1.PlanType
	(*CreatePlanRequest)(nil), // 1: api.gateway.v1.CreatePlanRequest
	(*PlanModel)(nil),         // 2: api.gateway.v1.PlanModel
	(*CommandHistory)(nil),    // 3: api.gateway.v1.CommandHistory
	(*PlanDevice)(nil),        // 4: api.gateway.v1.PlanDevice
	(*CreatePlanReply)(nil),   // 5: api.gateway.v1.CreatePlanReply
	(*UpdatePlanRequest)(nil), // 6: api.gateway.v1.UpdatePlanRequest
	(*UpdatePlanReply)(nil),   // 7: api.gateway.v1.UpdatePlanReply
	(*DeletePlanRequest)(nil), // 8: api.gateway.v1.DeletePlanRequest
	(*DeletePlanReply)(nil),   // 9: api.gateway.v1.DeletePlanReply
	(*GetPlanRequest)(nil),    // 10: api.gateway.v1.GetPlanRequest
	(*GetPlanReply)(nil),      // 11: api.gateway.v1.GetPlanReply
	(*ListPlanRequest)(nil),   // 12: api.gateway.v1.ListPlanRequest
	(*ListPlanReply)(nil),     // 13: api.gateway.v1.ListPlanReply
	(*SwitchPlanRequest)(nil), // 14: api.gateway.v1.SwitchPlanRequest
	(*SwitchPlanReply)(nil),   // 15: api.gateway.v1.SwitchPlanReply
	(*ExecPlanRequest)(nil),   // 16: api.gateway.v1.ExecPlanRequest
	(*ExecPlanReply)(nil),     // 17: api.gateway.v1.ExecPlanReply
}
var file_api_gateway_v1_plan_proto_depIdxs = []int32{
	2,  // 0: api.gateway.v1.CreatePlanRequest.plan:type_name -> api.gateway.v1.PlanModel
	0,  // 1: api.gateway.v1.PlanModel.plan_type:type_name -> api.gateway.v1.PlanType
	4,  // 2: api.gateway.v1.PlanModel.devices:type_name -> api.gateway.v1.PlanDevice
	3,  // 3: api.gateway.v1.PlanModel.history:type_name -> api.gateway.v1.CommandHistory
	2,  // 4: api.gateway.v1.UpdatePlanRequest.plan:type_name -> api.gateway.v1.PlanModel
	2,  // 5: api.gateway.v1.GetPlanReply.plan:type_name -> api.gateway.v1.PlanModel
	2,  // 6: api.gateway.v1.ListPlanReply.plans:type_name -> api.gateway.v1.PlanModel
	2,  // 7: api.gateway.v1.SwitchPlanReply.plan:type_name -> api.gateway.v1.PlanModel
	1,  // 8: api.gateway.v1.Plan.CreatePlan:input_type -> api.gateway.v1.CreatePlanRequest
	6,  // 9: api.gateway.v1.Plan.UpdatePlan:input_type -> api.gateway.v1.UpdatePlanRequest
	8,  // 10: api.gateway.v1.Plan.DeletePlan:input_type -> api.gateway.v1.DeletePlanRequest
	10, // 11: api.gateway.v1.Plan.GetPlan:input_type -> api.gateway.v1.GetPlanRequest
	12, // 12: api.gateway.v1.Plan.ListPlan:input_type -> api.gateway.v1.ListPlanRequest
	14, // 13: api.gateway.v1.Plan.SwitchPlan:input_type -> api.gateway.v1.SwitchPlanRequest
	16, // 14: api.gateway.v1.Plan.ExecPlan:input_type -> api.gateway.v1.ExecPlanRequest
	5,  // 15: api.gateway.v1.Plan.CreatePlan:output_type -> api.gateway.v1.CreatePlanReply
	7,  // 16: api.gateway.v1.Plan.UpdatePlan:output_type -> api.gateway.v1.UpdatePlanReply
	9,  // 17: api.gateway.v1.Plan.DeletePlan:output_type -> api.gateway.v1.DeletePlanReply
	11, // 18: api.gateway.v1.Plan.GetPlan:output_type -> api.gateway.v1.GetPlanReply
	13, // 19: api.gateway.v1.Plan.ListPlan:output_type -> api.gateway.v1.ListPlanReply
	15, // 20: api.gateway.v1.Plan.SwitchPlan:output_type -> api.gateway.v1.SwitchPlanReply
	17, // 21: api.gateway.v1.Plan.ExecPlan:output_type -> api.gateway.v1.ExecPlanReply
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_gateway_v1_plan_proto_init() }
func file_api_gateway_v1_plan_proto_init() {
	if File_api_gateway_v1_plan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_gateway_v1_plan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchPlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_plan_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecPlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_gateway_v1_plan_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_gateway_v1_plan_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_gateway_v1_plan_proto_goTypes,
		DependencyIndexes: file_api_gateway_v1_plan_proto_depIdxs,
		EnumInfos:         file_api_gateway_v1_plan_proto_enumTypes,
		MessageInfos:      file_api_gateway_v1_plan_proto_msgTypes,
	}.Build()
	File_api_gateway_v1_plan_proto = out.File
	file_api_gateway_v1_plan_proto_rawDesc = nil
	file_api_gateway_v1_plan_proto_goTypes = nil
	file_api_gateway_v1_plan_proto_depIdxs = nil
}
