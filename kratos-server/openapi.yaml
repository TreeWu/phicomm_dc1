# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
  title: ""
  version: 0.0.1
paths:
  /v1/command:
    post:
      tags:
        - CommandService
      description: 发送命令
      operationId: CommandService_SendCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.Command'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.CommandReply'
  /v1/device:
    get:
      tags:
        - Device
      description: 获取设备列表
      operationId: Device_ListDevice
      parameters:
        - name: userId
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.ListDeviceReply'
  /v1/device/binding:
    post:
      tags:
        - Device
      description: 绑定设备
      operationId: Device_BindDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.DeviceConnectReq'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.DeviceConnectReply'
  /v1/plan/create:
    post:
      tags:
        - Plan
      description: 创建计划
      operationId: Plan_CreatePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.CreatePlanRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.CreatePlanReply'
  /v1/plan/delete:
    post:
      tags:
        - Plan
      description: 删除计划
      operationId: Plan_DeletePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.DeletePlanRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.DeletePlanReply'
  /v1/plan/exec:
    post:
      tags:
        - Plan
      operationId: Plan_ExecPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.ExecPlanRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.ExecPlanReply'
  /v1/plan/get:
    get:
      tags:
        - Plan
      description: 获取计划
      operationId: Plan_GetPlan
      parameters:
        - name: id
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.GetPlanReply'
  /v1/plan/list:
    get:
      tags:
        - Plan
      description: 获取计划列表
      operationId: Plan_ListPlan
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.ListPlanReply'
  /v1/plan/switch:
    post:
      tags:
        - Plan
      description: 切换计划开关
      operationId: Plan_SwitchPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.SwitchPlanRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.SwitchPlanReply'
  /v1/plan/update:
    post:
      tags:
        - Plan
      description: 更新计划
      operationId: Plan_UpdatePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.UpdatePlanRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.UpdatePlanReply'
  v1/check_host:
    get:
      tags:
        - Wechat
      operationId: Wechat_CheckHost
      parameters:
        - name: host
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.CheckHostReq'
  v1/device:
    post:
      tags:
        - Device
      description: 更新设备信息
      operationId: Device_UpdateDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.UpdateDeviceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.UpdateDeviceReply'
  v1/share/confirm:
    post:
      tags:
        - Share
      description: 设备分享确认
      operationId: Share_ShareConfirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.ShareConfirmReq'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.ShareConfirmReply'
  v1/share/exit:
    post:
      tags:
        - Share
      description: 主动退出分享
      operationId: Share_ShareExit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.ShareExitReq'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.ShareExitReply'
  v1/share/invite:
    post:
      tags:
        - Share
      description: 设备分享邀请
      operationId: Share_ShareInvite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.ShareInviteReq'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.ShareInviteReply'
  v1/share/list:
    get:
      tags:
        - Share
      operationId: Share_GetShareList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.GetShareListReply'
  v1/share/revoke:
    post:
      tags:
        - Share
      description: 撤销邀请
      operationId: Share_ShareRevoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.ShareRevokeReq'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.ShareRevokeReply'
  v1/wechat/miniapp/jscode2session:
    get:
      tags:
        - Wechat
      operationId: Wechat_JsCode2Session
      parameters:
        - name: code
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.JsCode2SessionReply'
  v1/wechat/miniapp/update_user:
    post:
      tags:
        - Wechat
      operationId: Wechat_UpdateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.gateway.v1.UpdateUserReq'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.UpdateUserReply'
  v1/wechat/miniapp/user_info:
    get:
      tags:
        - Wechat
      operationId: Wechat_UserInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.UserInfoReply'
  v1/wechat/system_info:
    get:
      tags:
        - Wechat
      operationId: Wechat_SystemInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.gateway.v1.SystemInfoResp'
components:
  schemas:
    api.gateway.v1.CheckHostReq:
      type: object
      properties:
        host:
          type: string
    api.gateway.v1.Command:
      type: object
      properties:
        deviceType:
          type: string
        deviceId:
          type: string
        commandId:
          type: string
        dc1:
          $ref: '#/components/schemas/api.gateway.v1.Dc1Command'
    api.gateway.v1.CommandHistory:
      type: object
      properties:
        commandId:
          type: string
        execTime:
          type: string
        execResult:
          type: string
    api.gateway.v1.CommandReply:
      type: object
      properties:
        deviceType:
          type: string
        deviceId:
          type: string
        commandId:
          type: string
        success:
          type: boolean
        reason:
          type: string
    api.gateway.v1.CreatePlanReply:
      type: object
      properties:
        id:
          type: string
      description: 创建计划恢复
    api.gateway.v1.CreatePlanRequest:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/api.gateway.v1.PlanModel'
      description: 创建计划
    api.gateway.v1.Dc1Command:
      type: object
      properties:
        switchMain:
          type: integer
          format: int32
        switch1:
          type: integer
          format: int32
        switch2:
          type: integer
          format: int32
        switch3:
          type: integer
          format: int32
    api.gateway.v1.Dc1Device:
      type: object
      properties:
        id:
          type: integer
          format: int32
        deviceId:
          type: string
        userId:
          type: string
        name:
          type: string
        deviceType:
          type: string
        isOnline:
          type: boolean
        i:
          type: integer
          format: int32
        v:
          type: integer
          format: int32
        p:
          type: integer
          format: int32
        detalKwh:
          type: integer
          format: int32
        recover:
          type: boolean
        switch1Name:
          type: string
        switch2Name:
          type: string
        switch3Name:
          type: string
        lastActivatedAt:
          type: string
        lastMessageAt:
          type: string
        command:
          $ref: '#/components/schemas/api.gateway.v1.Dc1Command'
      description: 设备信息
    api.gateway.v1.DeletePlanReply:
      type: object
      properties: { }
      description: 删除计划回复
    api.gateway.v1.DeletePlanRequest:
      type: object
      properties:
        id:
          type: string
      description: 删除计划
    api.gateway.v1.DeviceConnectReply:
      type: object
      properties:
        deviceId:
          type: string
      description: 设备连接回复
    api.gateway.v1.DeviceConnectReq:
      type: object
      properties:
        mac:
          type: string
        uuid:
          type: string
      description: 设备连接
    api.gateway.v1.ExecPlanReply:
      type: object
      properties:
        message:
          type: string
      description: 执行计划回复
    api.gateway.v1.ExecPlanRequest:
      type: object
      properties:
        id:
          type: string
      description: 执行计划
    api.gateway.v1.GetPlanReply:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/api.gateway.v1.PlanModel'
      description: 获取计划回复
    api.gateway.v1.GetShareListReply:
      type: object
      properties:
        ownerShares:
          type: array
          items:
            $ref: '#/components/schemas/api.gateway.v1.GetShareListReply_ShareInfo'
        fromOtherShares:
          type: array
          items:
            $ref: '#/components/schemas/api.gateway.v1.GetShareListReply_ShareInfo'
    api.gateway.v1.GetShareListReply_ShareInfo:
      type: object
      properties:
        id:
          type: string
        userCode:
          type: string
        deviceId:
          type: string
        deviceName:
          type: string
        userName:
          type: string
        shareStatus:
          type: integer
          format: enum
    api.gateway.v1.JsCode2SessionReply:
      type: object
      properties:
        openid:
          type: string
        avatar:
          type: string
        nickname:
          type: string
        token:
          $ref: '#/components/schemas/api.gateway.v1.Token'
        userCode:
          type: string
    api.gateway.v1.ListDeviceReply:
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/api.gateway.v1.Dc1Device'
      description: 获取设备列表回复
    api.gateway.v1.ListPlanReply:
      type: object
      properties:
        plans:
          type: array
          items:
            $ref: '#/components/schemas/api.gateway.v1.PlanModel'
      description: 获取计划列表回复
    api.gateway.v1.PlanDevice:
      type: object
      properties:
        deviceId:
          type: string
        switch1:
          type: integer
          format: int32
        switch2:
          type: integer
          format: int32
        switch3:
          type: integer
          format: int32
        switchMain:
          type: integer
          format: int32
      description: 计划模型设备开关配置
    api.gateway.v1.PlanModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        planType:
          type: integer
          format: enum
        cron:
          type: string
        enabled:
          type: boolean
        devices:
          type: array
          items:
            $ref: '#/components/schemas/api.gateway.v1.PlanDevice'
        nextExecTime:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/api.gateway.v1.CommandHistory'
      description: 计划模型
    api.gateway.v1.ShareConfirmReply:
      type: object
      properties: { }
    api.gateway.v1.ShareConfirmReq:
      type: object
      properties:
        shareId:
          type: string
        confirm:
          type: boolean
    api.gateway.v1.ShareExitReply:
      type: object
      properties: { }
    api.gateway.v1.ShareExitReq:
      type: object
      properties:
        shareId:
          type: string
    api.gateway.v1.ShareInviteReply:
      type: object
      properties: { }
    api.gateway.v1.ShareInviteReq:
      type: object
      properties:
        userCode:
          type: string
        deviceId:
          type: string
    api.gateway.v1.ShareRevokeReply:
      type: object
      properties: { }
    api.gateway.v1.ShareRevokeReq:
      type: object
      properties:
        shareId:
          type: string
    api.gateway.v1.SwitchPlanReply:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/api.gateway.v1.PlanModel'
      description: 切换计划开关回复
    api.gateway.v1.SwitchPlanRequest:
      type: object
      properties:
        id:
          type: string
        enable:
          type: boolean
      description: 切换计划开关
    api.gateway.v1.SystemInfoResp:
      type: object
      properties:
        flushInterval:
          type: integer
          format: int32
        host:
          type: string
    api.gateway.v1.Token:
      type: object
      properties:
        accessToken:
          type: string
    api.gateway.v1.UpdateDeviceReply:
      type: object
      properties: { }
      description: 更新设备回复
    api.gateway.v1.UpdateDeviceRequest:
      type: object
      properties:
        deviceId:
          type: string
        name:
          type: string
        switch1Name:
          type: string
        switch2Name:
          type: string
        switch3Name:
          type: string
        recover:
          type: boolean
      description: 更新设备信息
    api.gateway.v1.UpdatePlanReply:
      type: object
      properties:
        id:
          type: string
      description: 更新计划回复
    api.gateway.v1.UpdatePlanRequest:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/api.gateway.v1.PlanModel'
      description: 更新计划
    api.gateway.v1.UpdateUserReply:
      type: object
      properties:
        avatar:
          type: string
        nickname:
          type: string
    api.gateway.v1.UpdateUserReq:
      type: object
      properties:
        avatar:
          type: string
        nickname:
          type: string
    api.gateway.v1.UserInfoReply:
      type: object
      properties:
        avatar:
          type: string
        nickname:
          type: string
        userCode:
          type: string
tags:
  - name: CommandService
    description: 命令接口
  - name: Device
    description: 设备服务
  - name: Plan
    description: 计划服务
  - name: Share
    description: 设备分享服务
  - name: Wechat
    description: 微信服务
